{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api'; // URL base da API\n\naxios.interceptors.response.use(response => response, error => {\n  if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n    localStorage.removeItem('user');\n    localStorage.removeItem('usuarioNome');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Função para registrar um novo usuário\nexport const registerUser = async userData => {\n  const response = await axios.post(`${API_URL}/auth/register`, userData);\n  return response.data;\n};\n\n// Função para fazer login\nexport const loginUser = async loginData => {\n  const response = await axios.post(`${API_URL}/auth/login`, loginData);\n  return response.data;\n};\n\n// Função para criar uma nova tarefa\nexport const createTask = async (taskData, token) => {\n  const response = await axios.post(`${API_URL}/tarefas`, taskData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Função para listar tarefas\nexport const getTasks = async token => {\n  const response = await axios.get(`${API_URL}/tarefas`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Função para editar uma tarefa\nexport const updateTask = async (taskId, taskData, token) => {\n  const response = await axios.put(`${API_URL}/tarefas/${taskId}`, taskData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Função para excluir uma tarefa\nexport const deleteTask = async (taskId, token) => {\n  const response = await axios.delete(`${API_URL}/tarefas/${taskId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Função para buscar uma tarefa pelo ID\nexport const getTaskById = async (taskId, token) => {\n  const response = await axios.get(`${API_URL}/tarefas/${taskId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","interceptors","response","use","error","status","localStorage","removeItem","window","location","href","Promise","reject","registerUser","userData","post","data","loginUser","loginData","createTask","taskData","token","headers","Authorization","getTasks","get","updateTask","taskId","put","deleteTask","delete","getTaskById"],"sources":["C:/Users/Isaléo Guimarães/Desktop/Projetos/gerenciador-de-tarefas/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api'; // URL base da API\n\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n            localStorage.removeItem('user');\n            localStorage.removeItem('usuarioNome');\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Função para registrar um novo usuário\nexport const registerUser = async (userData) => {\n    const response = await axios.post(`${API_URL}/auth/register`, userData);\n    return response.data;\n};\n\n// Função para fazer login\nexport const loginUser = async (loginData) => {\n    const response = await axios.post(`${API_URL}/auth/login`, loginData);\n    return response.data;\n};\n\n// Função para criar uma nova tarefa\nexport const createTask = async (taskData, token) => {\n    const response = await axios.post(`${API_URL}/tarefas`, taskData, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};\n\n// Função para listar tarefas\nexport const getTasks = async (token) => {\n    const response = await axios.get(`${API_URL}/tarefas`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};\n\n// Função para editar uma tarefa\nexport const updateTask = async (taskId, taskData, token) => {\n    const response = await axios.put(`${API_URL}/tarefas/${taskId}`, taskData, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};\n\n// Função para excluir uma tarefa\nexport const deleteTask = async (taskId, token) => {\n    const response = await axios.delete(`${API_URL}/tarefas/${taskId}`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};\n\n// Função para buscar uma tarefa pelo ID\nexport const getTaskById = async (taskId, token) => {\n    const response = await axios.get(`${API_URL}/tarefas/${taskId}`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}