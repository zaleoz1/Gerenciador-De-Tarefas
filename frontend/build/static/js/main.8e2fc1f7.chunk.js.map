{"version":3,"sources":["utils/jwt.js","services/auth.js","components/Auth/LoginForm.js","components/Auth/RegisterForm.js","services/api.js","components/Tarefas/TarefaForm.js","components/Tarefas/TarefaList.js","App.js","index.js"],"names":["getToken","localStorage","getItem","API_URL","login","password","axios","post","senha","then","response","token","data","setItem","JSON","stringify","nome","nomeCompleto","username","auth","register","name","logout","removeItem","getCurrentUser","parse","LoginForm","loginInput","setLoginInput","useState","setSenha","showPassword","setShowPassword","erro","setErro","history","useHistory","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","push","err","status","type","id","placeholder","value","onChange","target","required","onClick","tabIndex","RegisterForm","setName","setLogin","setPassword","confirmPassword","setConfirmPassword","error","setError","showConfirmPassword","setShowConfirmPassword","interceptors","use","window","location","href","Promise","reject","updateTask","taskId","taskData","put","concat","headers","Authorization","TarefaForm","_ref","tarefa","tarefaProp","onSave","onCancel","setNome","dataInicio","setDataInicio","dataFim","setDataFim","setStatus","sucesso","setSucesso","showSucesso","setShowSucesso","carregando","setCarregando","useParams","usuarioNome","useEffect","tarefaData","get","getTaskById","dataHoraInicio","substring","dataHoraFim","fetchTarefa","toLocalDateTime","dateStr","style","minWidth","createTask","setTimeout","msg","message","handleLogout","title","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","handleVisualizarLista","statusColors","TarefaList","tarefas","setTarefas","fetchTarefas","getTasks","handleDelete","delete","deleteTask","handleVoltar","length","map","handleEditar","_objectSpread","handleConcluir","disabled","Layout","useLocation","hideHeaderFooter","pathname","isAuthenticated","setIsAuthenticated","App","Router","Switch","Route","path","component","exact","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e2fc1f7.chunk.js","sourcesContent":["function getToken() {\n    return localStorage.getItem('jwtToken');\n}\n\nfunction setToken(token) {\n    localStorage.setItem('jwtToken', token);\n}\n\nfunction removeToken() {\n    localStorage.removeItem('jwtToken');\n}\n\nexport { getToken, setToken, removeToken };","import axios from 'axios';\nimport { setToken } from '../utils/jwt';\n\nconst API_URL = 'http://localhost:8080/api/auth/';\n\nexport const register = (name, login, password) => {\n    return axios.post(API_URL + 'register', {\n        nomeCompleto: name,\n        login,\n        senha: password\n    });\n};\n\nexport const login = (login, password) => {\n    return axios.post(API_URL + 'login', {\n        login,\n        senha: password \n    }).then(response => {\n        if (response.data.token) {\n            localStorage.setItem('user', JSON.stringify(response.data));\n            setToken(response.data.token);\n            if (response.data.nome || response.data.nomeCompleto || response.data.username) {\n                localStorage.setItem('usuarioNome', response.data.nome || response.data.nomeCompleto || response.data.username);\n            }\n        }\n        return response.data;\n    });\n};\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n};\n\nexport const getCurrentUser = () => {\n    return JSON.parse(localStorage.getItem('user'));\n};\n\nconst auth = {\n    register,\n    login,\n    logout,\n    getCurrentUser\n};\n\nexport default auth;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { login } from '../../services/auth';\n\nconst LoginForm = () => {\n    const [loginInput, setLoginInput] = useState('');\n    const [senha, setSenha] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n    const [erro, setErro] = useState('');\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setErro('');\n        if (!loginInput || !senha) {\n            setErro('Preencha todos os campos.');\n            return;\n        }\n        try {\n            await login(loginInput, senha);\n            history.push('/tarefas');\n        } catch (err) {\n            if (err && err.response && (err.response.status === 401 || err.response.status === 403)) {\n                setErro('Usuário ou senha incorretos.');\n            } else {\n                setErro('Erro ao tentar fazer login. Tente novamente.');\n            }\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen flex items-center justify-center p-2 overflow-hidden\">\n            <div className=\"w-full max-w-5xl flex flex-col md:flex-row rounded-3xl overflow-hidden shadow-2xl h-auto md:h-[600px]\">\n                {}\n                <div className=\"w-full md:w-1/2 h-full bg-[#23242a] flex flex-col justify-center items-center p-6 md:p-10\">\n                    <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-6 md:mb-8 text-center\">Fazer login</h2>\n                    <form onSubmit={handleSubmit} className=\"w-full max-w-xs space-y-4\">\n                        {erro && <p className=\"text-red-400 text-center mb-2\">{erro}</p>}\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            name=\"username\"\n                            placeholder=\"E-mail\"\n                            value={loginInput}\n                            onChange={e => setLoginInput(e.target.value)}\n                            required\n                            className=\"w-full px-4 py-3 bg-[#35363b] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-violet-400 placeholder-gray-400\"\n                        />\n                        <div className=\"relative\">\n                            <input\n                                type={showPassword ? \"text\" : \"password\"}\n                                id=\"password\"\n                                name=\"password\"\n                                placeholder=\"Senha\"\n                                value={senha}\n                                onChange={e => setSenha(e.target.value)}\n                                required\n                                className=\"w-full px-4 py-3 bg-[#35363b] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-violet-400 placeholder-gray-400 pr-16\"\n                            />\n                            <button\n                                type=\"button\"\n                                onClick={() => setShowPassword(!showPassword)}\n                                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-200 text-sm\"\n                                tabIndex={-1}\n                            >\n                                {showPassword ? 'Ocultar' : 'Mostrar'}\n                            </button>\n                        </div>\n                        <button type=\"submit\" className=\"w-full py-3 rounded-md bg-gradient-to-r from-violet-500 to-pink-200 text-white font-semibold text-lg transition hover:from-violet-600 hover:to-pink-300\">Entrar</button>\n                    </form>\n                    <div className=\"flex items-center w-full max-w-xs my-6\"> \n                    </div>\n                </div>\n                {}\n                <div className=\"w-full md:w-1/2 h-full flex flex-col justify-center items-center bg-gradient-to-br from-white to-[#d1c4e9] p-6 md:p-10 relative\">\n                    <div className=\"text-center\">\n                        <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">Não tem uma conta?</h2>\n                        <p className=\"text-gray-600 mb-6 md:mb-8\">Lorem Ipsum has been the industry's standard dummy text ever since the 1500s</p>\n                        <button\n                            onClick={() => history.push('/register')}\n                            className=\"w-full md:w-auto px-8 py-3 border border-gray-400 rounded-full text-gray-800 font-semibold hover:bg-gray-100 transition text-lg\"\n                        >\n                            Cadastre-se\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginForm;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport auth from '../../services/auth';\n\nconst RegisterForm = () => {\n    const [name, setName] = useState('');\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [error, setError] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        if (password !== confirmPassword) {\n            setError('As senhas não coincidem.');\n            return;\n        }\n        try {\n            await auth.register(name, login, password);\n            history.push('/login');\n        } catch (err) {\n            setError('Erro ao registrar. Tente novamente.');\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen flex items-center justify-center p-2 overflow-hidden\">\n            <div className=\"w-full max-w-4xl flex flex-col md:flex-row rounded-3xl overflow-hidden shadow-2xl h-auto md:h-[600px]\">\n                {}\n                <div className=\"w-full md:w-1/2 h-full flex flex-col justify-center items-center bg-gradient-to-br from-white to-[#f3e5f5] p-6 md:p-10 relative\">\n                    <div className=\"text-center\">\n                        <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">Já tem uma conta?</h2>\n                        <p className=\"text-gray-600 mb-6 md:mb-8\">Lorem Ipsum has been the industry's standard dummy text ever since the</p>\n                        <button\n                            onClick={() => history.push('/login')}\n                            className=\"w-full md:w-auto px-8 py-3 border border-gray-400 rounded-full text-gray-800 font-semibold hover:bg-gray-100 transition text-lg\"\n                        >\n                            Faça login\n                        </button>\n                    </div>\n                </div>\n                {}\n                <div className=\"w-full md:w-1/2 h-full bg-[#23242a] flex flex-col justify-center items-center p-6 md:p-10\">\n                    <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-6 md:mb-8 text-center\">Cadastro</h2>\n                    <form onSubmit={handleSubmit} className=\"w-full max-w-xs space-y-4\">\n                        {error && <p className=\"text-red-400 text-center mb-2\">{error}</p>}\n                        <input\n                            type=\"text\"\n                            placeholder=\"Nome\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            required\n                            className=\"w-full px-4 py-3 bg-[#35363b] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-violet-400 placeholder-gray-400\"\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"E-mail\"\n                            value={login}\n                            onChange={(e) => setLogin(e.target.value)}\n                            required\n                            className=\"w-full px-4 py-3 bg-[#35363b] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-violet-400 placeholder-gray-400\"\n                        />\n                        <div className=\"relative\">\n                            <input\n                                type={showPassword ? \"text\" : \"password\"}\n                                placeholder=\"Senha\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                required\n                                className=\"w-full px-4 py-3 bg-[#35363b] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-violet-400 placeholder-gray-400 pr-16\"\n                            />\n                            <button\n                                type=\"button\"\n                                onClick={() => setShowPassword(!showPassword)}\n                                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-200 text-sm\"\n                                tabIndex={-1}\n                            >\n                                {showPassword ? 'Ocultar' : 'Mostrar'}\n                            </button>\n                        </div>\n                        <div className=\"relative\">\n                            <input\n                                type={showConfirmPassword ? \"text\" : \"password\"}\n                                placeholder=\"Confirmação de Senha\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                                required\n                                className=\"w-full px-4 py-3 bg-[#35363b] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-violet-400 placeholder-gray-400 pr-16\"\n                            />\n                            <button\n                                type=\"button\"\n                                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-200 text-sm\"\n                                tabIndex={-1}\n                            >\n                                {showConfirmPassword ? 'Ocultar' : 'Mostrar'}\n                            </button>\n                        </div>\n                        <button type=\"submit\" className=\"w-full py-3 rounded-md bg-gradient-to-r from-violet-500 to-pink-200 text-white font-semibold text-lg transition hover:from-violet-600 hover:to-pink-300\">Cadastrar</button>\n                    </form>\n                    <div className=\"flex items-center w-full max-w-xs my-6\">\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterForm;","import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api'; // URL base da API\n\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n            localStorage.removeItem('user');\n            localStorage.removeItem('usuarioNome');\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Função para registrar um novo usuário\nexport const registerUser = async (userData) => {\n    const response = await axios.post(`${API_URL}/auth/register`, userData);\n    return response.data;\n};\n\n// Função para fazer login\nexport const loginUser = async (loginData) => {\n    const response = await axios.post(`${API_URL}/auth/login`, loginData);\n    return response.data;\n};\n\n// Função para criar uma nova tarefa\nexport const createTask = async (taskData, token) => {\n    const response = await axios.post(`${API_URL}/tarefas`, taskData, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};\n\n// Função para listar tarefas\nexport const getTasks = async (token) => {\n    const response = await axios.get(`${API_URL}/tarefas`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};\n\n// Função para editar uma tarefa\nexport const updateTask = async (taskId, taskData, token) => {\n    const response = await axios.put(`${API_URL}/tarefas/${taskId}`, taskData, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};\n\n// Função para excluir uma tarefa\nexport const deleteTask = async (taskId, token) => {\n    const response = await axios.delete(`${API_URL}/tarefas/${taskId}`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};\n\n// Função para buscar uma tarefa pelo ID\nexport const getTaskById = async (taskId, token) => {\n    const response = await axios.get(`${API_URL}/tarefas/${taskId}`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    return response.data;\n};","import React, { useState, useEffect } from 'react';\nimport { createTask, updateTask, getTaskById } from '../../services/api';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getToken } from '../../utils/jwt';\n\nconst TarefaForm = ({ tarefa: tarefaProp, onSave, onCancel }) => {\n    const [nome, setNome] = useState('');\n    const [dataInicio, setDataInicio] = useState('');\n    const [dataFim, setDataFim] = useState('');\n    const [status, setStatus] = useState('Pendente');\n    const [erro, setErro] = useState('');\n    const [sucesso, setSucesso] = useState('');\n    const [showSucesso, setShowSucesso] = useState(false);\n    const [carregando, setCarregando] = useState(false);\n    const history = useHistory();\n    const { id } = useParams();\n    const usuarioNome = localStorage.getItem('usuarioNome') || 'Usuário';\n    const tarefa = tarefaProp;\n\n    useEffect(() => {\n        const fetchTarefa = async () => {\n            if (id) {\n                setCarregando(true);\n                try {\n                    const token = getToken();\n                    const tarefaData = await getTaskById(id, token);\n                    setNome(tarefaData.nome);\n                    setDataInicio(tarefaData.dataHoraInicio ? tarefaData.dataHoraInicio.substring(0, 10) : '');\n                    setDataFim(tarefaData.dataHoraFim ? tarefaData.dataHoraFim.substring(0, 10) : '');\n                    setStatus(tarefaData.status);\n                } catch (err) {\n                    setErro('Erro ao carregar tarefa para edição.');\n                } finally {\n                    setCarregando(false);\n                }\n            } else if (tarefaProp) {\n                setNome(tarefaProp.nome);\n                setDataInicio(tarefaProp.dataHoraInicio ? tarefaProp.dataHoraInicio.substring(0, 10) : '');\n                setDataFim(tarefaProp.dataHoraFim ? tarefaProp.dataHoraFim.substring(0, 10) : '');\n                setStatus(tarefaProp.status);\n            }\n        };\n        fetchTarefa();\n    }, [id, tarefaProp]);\n\n    const toLocalDateTime = (dateStr) => {\n        return dateStr ? `${dateStr}T00:00:00` : '';\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setErro('');\n        setSucesso('');\n        setShowSucesso(false);\n        const tarefaData = {\n            nome,\n            dataHoraInicio: toLocalDateTime(dataInicio),\n            dataHoraFim: toLocalDateTime(dataFim),\n            status\n        };\n        const token = getToken();\n        try {\n            if (id) {\n                await updateTask(id, tarefaData, token);\n            } else {\n                await createTask(tarefaData, token);\n                // Limpa o formulário após salvar nova tarefa\n                setNome('');\n                setDataInicio('');\n                setDataFim('');\n                setStatus('Pendente');\n            }\n            setSucesso('Tarefa salva com sucesso!');\n            setShowSucesso(true);\n            setTimeout(() => setShowSucesso(false), 3000);\n            if (onSave) onSave();\n        } catch (err) {\n            let msg = 'Erro ao salvar tarefa. Verifique os dados e tente novamente.';\n            if (err.response && err.response.data && err.response.data.message) {\n                msg = err.response.data.message;\n            } else if (err.response && err.response.data) {\n                msg = JSON.stringify(err.response.data);\n            }\n            setErro(msg);\n        }\n    };\n\n    const handleVisualizarLista = () => {\n        history.push('/tarefas');\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('user');\n        localStorage.removeItem('usuarioNome');\n        localStorage.removeItem('token');\n        history.push('/login');\n    };\n\n    if (carregando) {\n        return <div className=\"text-center py-10 text-blue-700 font-bold\">Carregando tarefa...</div>;\n    }\n\n    return (\n        <div className=\"relative w-full max-w-5xl mx-auto\">\n            {}\n            <div\n                className={`fixed left-1/2 top-8 z-50 transform -translate-x-1/2 transition-all duration-500 ${showSucesso ? 'opacity-100 scale-100' : 'opacity-0 scale-95 pointer-events-none'}`}\n                style={{ minWidth: '260px' }}\n            >\n                {sucesso && (\n                    <div className=\"text-green-700 font-semibold bg-green-100 rounded p-3 border border-green-200 shadow-lg drop-shadow-lg animate-fade-in-out\">\n                        {sucesso}\n                    </div>\n                )}\n            </div>\n            <form onSubmit={handleSubmit} className=\"bg-white rounded-xl shadow-2xl p-4 sm:p-6 md:p-8 space-y-6 max-w-5xl w-full mx-auto border border-gray-100\">\n                <div className=\"mb-4 flex justify-between items-center\">\n                    <div className=\"text-right text-sm text-gray-500 font-medium\">Bem-vindo, {usuarioNome}!</div>\n                    <button\n                        type=\"button\"\n                        onClick={handleLogout}\n                        className=\"px-2 py-1 bg-red-500 text-white rounded-md hover:bg-red-600 transition font-medium border border-red-500 shadow-sm flex items-center gap-1 text-sm\"\n                        title=\"Sair\"\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a2 2 0 01-2 2H7a2 2 0 01-2-2V7a2 2 0 012-2h4a2 2 0 012 2v1\" /></svg>\n                        Logout\n                    </button>\n                </div>\n                {erro && (\n                    <div className=\"mb-4 text-red-600 font-semibold bg-red-100 rounded p-2 border border-red-200\">{erro}</div>\n                )}\n                <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between mb-4 gap-3\">\n                    <h2 className=\"text-2xl font-bold text-blue-800 flex items-center gap-2\">\n                        <span className=\"inline-block w-2 h-6 bg-blue-600 rounded mr-2\"></span>\n                        {tarefa ? 'Editar Tarefa' : 'Nova Tarefa'}\n                    </h2>\n                    <button\n                        type=\"button\"\n                        onClick={handleVisualizarLista}\n                        className=\"flex items-center gap-2 px-4 py-2 bg-blue-100 text-blue-800 rounded-lg hover:bg-blue-200 transition font-medium border border-blue-200 shadow-sm w-full sm:w-auto\"\n                        title=\"Visualizar lista de tarefas\"\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" /></svg>\n                        Visualizar Lista\n                    </button>\n                </div>\n                <div>\n                    <label className=\"block text-gray-700 mb-1 font-medium\">Nome da Tarefa</label>\n                    <input\n                        type=\"text\"\n                        value={nome}\n                        onChange={(e) => setNome(e.target.value)}\n                        required\n                        placeholder=\"Digite o nome da tarefa\"\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition shadow-sm\"\n                    />\n                </div>\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                    <div className=\"flex-1\">\n                        <label className=\"block text-gray-700 mb-1 font-medium\">Data de Início</label>\n                        <input\n                            type=\"date\"\n                            value={dataInicio}\n                            onChange={(e) => setDataInicio(e.target.value)}\n                            required\n                            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition shadow-sm\"\n                        />\n                    </div>\n                    <div className=\"flex-1\">\n                        <label className=\"block text-gray-700 mb-1 font-medium\">Data de Fim</label>\n                        <input\n                            type=\"date\"\n                            value={dataFim}\n                            onChange={(e) => setDataFim(e.target.value)}\n                            required\n                            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition shadow-sm\"\n                        />\n                    </div>\n                </div>\n                <div>\n                    <label className=\"block text-gray-700 mb-1 font-medium\">Status</label>\n                    <select\n                        value={status}\n                        onChange={(e) => setStatus(e.target.value)}\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition shadow-sm\"\n                    >\n                        <option value=\"Pendente\">Pendente</option>\n                        <option value=\"Em Andamento\">Em Andamento</option>\n                        <option value=\"Concluída\">Concluída</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col sm:flex-row justify-end gap-3 pt-2\">\n                    <button\n                        type=\"button\"\n                        onClick={onCancel}\n                        className=\"flex items-center gap-2 px-5 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition font-medium shadow-sm border border-gray-300 w-full sm:w-auto\"\n                        title=\"Cancelar\"\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" /></svg>\n                        Cancelar\n                    </button>\n                    <button\n                        type=\"submit\"\n                        className=\"flex items-center gap-2 px-5 py-2 bg-blue-700 text-white rounded-lg hover:bg-blue-800 transition font-medium shadow-sm border border-blue-700 w-full sm:w-auto\"\n                        title=\"Salvar\"\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" /></svg>\n                        Salvar\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default TarefaForm;","import React, { useEffect, useState } from 'react';\nimport { getTasks, deleteTask, updateTask } from '../../services/api';\nimport { getToken } from '../../utils/jwt';\nimport { useHistory } from 'react-router-dom';\n\nconst statusColors = {\n    'Pendente': 'bg-yellow-100 text-yellow-800',\n    'Em Andamento': 'bg-blue-100 text-blue-800',\n    'Concluída': 'bg-green-100 text-green-800',\n};\n\nconst TarefaList = () => {\n    const [tarefas, setTarefas] = useState([]);\n    const history = useHistory();\n    const usuarioNome = localStorage.getItem('usuarioNome') || 'Usuário';\n\n    useEffect(() => {\n        fetchTarefas();\n    }, []);\n\n    const fetchTarefas = async () => {\n        const token = getToken();\n        const data = await getTasks(token);\n        setTarefas(data);\n    };\n\n    const handleDelete = async (id) => {\n        const token = getToken();\n        await deleteTask(id, token);\n        fetchTarefas();\n    };\n\n    const handleVoltar = () => {\n        history.push('/nova-tarefa');\n    };\n\n    const handleEditar = (id) => {\n        history.push(`/editar-tarefa/${id}`);\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('user');\n        localStorage.removeItem('usuarioNome');\n        localStorage.removeItem('token');\n        history.push('/login');\n    };\n\n    const handleConcluir = async (tarefa) => {\n        if (tarefa.status === 'Concluída') return;\n        const token = getToken();\n        await updateTask(tarefa.id, { ...tarefa, status: 'Concluída' }, token);\n        fetchTarefas();\n    };\n\n    return (\n        <div className=\"bg-white rounded-xl shadow-2xl p-4 sm:p-6 md:p-8 max-w-5xl w-full mx-auto border border-gray-100\">\n            <div className=\"mb-4 flex justify-between items-center\">\n                <div className=\"text-sm text-gray-500 font-medium\">Bem-vindo, {usuarioNome}!</div>\n                <button\n                    type=\"button\"\n                    onClick={handleLogout}\n                    className=\"px-2 py-1 bg-red-500 text-white rounded-md hover:bg-red-600 transition font-medium border border-red-500 shadow-sm flex items-center gap-1 text-sm\"\n                    title=\"Sair\"\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a2 2 0 01-2 2H7a2 2 0 01-2-2V7a2 2 0 012-2h4a2 2 0 012 2v1\" /></svg>\n                    Logout\n                </button>\n            </div>\n            <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between mb-6 gap-3\">\n                <h2 className=\"text-2xl font-bold text-blue-800 flex items-center gap-2\">\n                    <span className=\"inline-block w-2 h-6 bg-blue-600 rounded mr-2\"></span>\n                    Lista de Tarefas\n                </h2>\n                <button\n                    onClick={handleVoltar}\n                    className=\"flex items-center gap-2 px-4 py-2 bg-blue-100 text-blue-800 rounded-lg hover:bg-blue-200 transition font-medium border border-blue-200 shadow-sm w-full sm:w-auto\"\n                    title=\"Voltar para o formulário de tarefas\"\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>\n                    Nova Tarefa\n                </button>\n            </div>\n            <ul className=\"divide-y divide-gray-100\">\n                {tarefas.length === 0 && (\n                    <li className=\"py-8 text-center text-gray-400\">Nenhuma tarefa cadastrada.</li>\n                )}\n                {tarefas.map(tarefa => (\n                    <li key={tarefa.id} className=\"flex flex-col md:flex-row md:items-center justify-between py-5 px-2 bg-blue-50 hover:bg-blue-200 transition rounded-lg group gap-2 md:gap-0\">\n                        <div className=\"flex-1 flex flex-col sm:flex-row sm:items-center gap-2 flex-wrap\">\n                            <span className=\"text-lg font-semibold text-gray-800 break-words max-w-xs\">{tarefa.nome}</span>\n                            <span className={`ml-0 sm:ml-4 px-3 py-1 rounded-full text-xs font-bold ${statusColors[tarefa.status] || 'bg-gray-100 text-gray-700'}`}>{tarefa.status}</span>\n                            <span className=\"ml-0 sm:ml-4 text-sm text-gray-500\">Início: {tarefa.dataHoraInicio ? tarefa.dataHoraInicio.substring(0, 10) : '--'}</span>\n                            <span className=\"ml-0 sm:ml-4 text-sm text-gray-500\">Fim: {tarefa.dataHoraFim ? tarefa.dataHoraFim.substring(0, 10) : '--'}</span>\n                        </div>\n                        <div className=\"flex gap-2 mt-3 md:mt-0 md:ml-4 justify-end w-full md:w-auto\">\n                            <button\n                                onClick={() => handleEditar(tarefa.id)}\n                                className=\"flex items-center gap-1 px-4 py-2 bg-yellow-400 text-white rounded-lg hover:bg-yellow-500 transition font-medium shadow-sm border border-yellow-400 w-full md:w-auto\"\n                                title=\"Editar\"\n                            >\n                                <i className=\"fas fa-edit\"></i>\n                            </button>\n                            <button\n                                onClick={() => handleConcluir(tarefa)}\n                                className={`flex items-center gap-1 px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition font-medium shadow-sm border border-green-500 w-full md:w-auto ${tarefa.status === 'Concluída' ? 'opacity-50 cursor-not-allowed' : ''}`}\n                                title=\"Concluir\"\n                                disabled={tarefa.status === 'Concluída'}\n                            >\n                                <i className=\"fas fa-check\"></i>\n                            </button>\n                            <button\n                                onClick={() => handleDelete(tarefa.id)}\n                                className=\"flex items-center gap-1 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition font-medium shadow-sm border border-red-500 w-full md:w-auto\"\n                                title=\"Excluir\"\n                            >\n                                <i className=\"fas fa-trash\"></i>\n                            </button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TarefaList;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useLocation } from 'react-router-dom';\nimport LoginForm from './components/Auth/LoginForm';\nimport RegisterForm from './components/Auth/RegisterForm';\nimport TarefaForm from './components/Tarefas/TarefaForm';\nimport TarefaList from './components/Tarefas/TarefaList';\nimport { getToken } from './utils/jwt';\n\nfunction Layout({ children }) {\n  const location = useLocation();\n  const hideHeaderFooter = location.pathname === '/login' || location.pathname === '/register';\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const token = getToken();\n    if (token) {\n      setIsAuthenticated(true);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"min-h-screen flex flex-col relative\">\n      <main className=\"flex-1 flex items-center justify-center p-6 z-10 relative\">\n        <div className={hideHeaderFooter ? 'w-full' : 'w-full max-w-2xl'}>\n          {children}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/register\" component={RegisterForm} />\n          <Route path=\"/tarefas\" component={TarefaList} />\n          <Route path=\"/nova-tarefa\" component={TarefaForm} />\n          <Route path=\"/editar-tarefa/:id\" component={TarefaForm} />\n          <Route path=\"/\" exact component={LoginForm} />\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}